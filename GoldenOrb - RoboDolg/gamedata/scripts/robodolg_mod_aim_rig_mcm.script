----------------------------------------------------------------------------
-- RoboDolg: Weapon IK Rig
----------------------------------------------------------------------------
-- Implemented by Lhan
----------------------------------------------------------------------------

-- Imports

--- Math
local hpb_to_direction = lander_math.hpb_to_direction

--- Weapon
local get_hands_rotation = goldenorb_hands_mcm.get_hands_rotation
local get_hands_aim_point = goldenorb_hands_mcm.get_hands_aim_point
local get_weapon_aim_point = goldenorb_weapon.get_weapon_aim_point
local get_fire_bone_position = goldenorb_weapon.get_fire_bone_position

--- Camera
local get_camera_aim_point = goldenorb_camera_mcm.get_camera_aim_point

--- Shapes
local RED = robodolg_shapes.RED
local CYAN = robodolg_shapes.CYAN
local YELLOW = robodolg_shapes.YELLOW
local ui_2d = robodolg_shapes.ui_2d
local draw_line = robodolg_shapes.draw_line
local draw_ngon = robodolg_shapes.draw_ngon

--- RoboDolg
local tree = robodolg_goldenorb_mcm.tree

--- MCM Builder
local ImageWithText = mcm_builder.ImageWithText
local Checkbox = mcm_builder.Checkbox

--- Log
local log = robodolg_logging.log

-- State

local page = tree:pages("aim_rig")

page:settings(ImageWithText.new("aim_rig_title"):text("aim_rig"))

local should_draw = page:settings(
   Checkbox.new("draw_aim_rig"):default(true)
)

-- Implementation

--- Draw aim rig
---@param state table
function draw(state)
   log("draw_aim_rig(%s)", state)

   if not should_draw:get() then
       return
   end

   local cam_aim = get_camera_aim_point(state)

   if state.wpn then
      local hands_aim = ui_2d(get_hands_aim_point(), true)(vector())
      local wpn_aim = ui_2d(get_weapon_aim_point(state.wpn), true)(vector())
      local fire_pos = ui_2d(get_fire_bone_position(state.wpn), true)(vector())

      draw_line(
         cam_aim,
         hands_aim,
         CYAN
      )

      draw_line(
         hands_aim,
         wpn_aim,
         YELLOW
      )

      draw_line(
         fire_pos,
         wpn_aim,
         RED
      )

   end

   if state.actor then
      local pos = state.hands.pos
      local rot = get_hands_rotation()
      local dir = hpb_to_direction(rot)
      draw_ngon(
         0.02,
         8,
         vector():set(0, 1, 0),
         ui_2d(pos, true)
      )

      draw_line(
         ui_2d(pos, true)(vector()),
         ui_2d(vector():set(pos):add(dir:mul(1000)), true)(vector()),
         vector():set(0, 1, 0)
      )
   end
end

---@return nil
function on_game_start()
   log("robodolg_weapon_ik.on_game_start")
   RegisterScriptCallback(
      "robodolg_on_draw",
      draw
   )
end
