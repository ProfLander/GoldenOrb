----------------------------------------------------------------------------
-- GoldenOrb: Impure Actions
----------------------------------------------------------------------------
-- Covers any action that reads or writes state outside of GoldenOrb.
----------------------------------------------------------------------------
-- Implemented by Lhan
----------------------------------------------------------------------------

-- Imports

--- Main
local phase_build_state = goldenorb_main.phase_build_state
local phase_apply_state = goldenorb_main.phase_apply_state
local phase_done = goldenorb_main.phase_done
local handle_error = goldenorb_main.handle_error

--- Function
local protected = goldenorb_function.protected

--- Schedule
local I_NOT_EXIST = goldenorb_schedule.I_NOT_EXIST
local O_WRITE = goldenorb_schedule.O_WRITE

--- Logging
local log = goldenorb_logging.logger(
   "GoldenOrb/Impure",
    goldenorb_logging.WARNING
)

-- Implementation

--- Set HUD adjustment
---@param state table
---@return table
function hud_adjust_enable(state)
   log:trace("hud_adjust_enable(%s)", state)
   hud_adjust.enabled(true)
   return {}
end

--- Inject the actor into the given state
---@param state table
---@return table
function inject_actor(state)
   log:trace("inject_actor(%s)", state)
   return {
      actor = db.actor
   }
end

--- Entrypoint
---@return nil
on_game_start = protected(
   handle_error,
   function()
      goldenorb_main.ACTOR_ON_UPDATE
         :insert(
            inject_actor,
            {phase_build_state},
            {phase_apply_state},
            {actor = I_NOT_EXIST},
            {actor = O_WRITE}
         )
         :insert(
            hud_adjust_enable,
            {phase_apply_state},
            {phase_done}
         )
   end
)
