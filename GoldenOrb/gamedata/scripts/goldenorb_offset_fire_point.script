----------------------------------------------------------------------------
-- GoldenOrb: Fire Point Offset Modifier
----------------------------------------------------------------------------
-- Implemented by Lhan
----------------------------------------------------------------------------

-- Imports

--- Main
local phase_build_state = goldenorb_main.phase_build_state
local phase_modify_state = goldenorb_main.phase_modify_state
local handle_error = goldenorb_main.handle_error

--- Weapon
local inject_weapon_hud = goldenorb_weapon.inject_weapon_hud

--- Function
local protected = goldenorb_function.protected

--- Schedule
local I_READ = goldenorb_schedule.I_READ
local O_WRITE = goldenorb_schedule.O_WRITE

--- Math
local EPSILON = lander_math.EPSILON

--- Log
local log = goldenorb_logging.logger(
   "GoldenOrb/Offset Fire Point",
   goldenorb_logging.TRACE
)

-- Constants

local OFFSET = vector():set(0, 0, EPSILON)

-- Implementation

--- Offset fire point slightly to prevent self-intersection
---@param state table
---@return table
function offset_fire_point(state)
   log:trace("offset_fire_point(%s)", state)

   return {
      hud = {
         fire_point = vector():set(state.hud.fire_point):add(OFFSET),
         fire_point2 = vector():set(state.hud.fire_point2):add(OFFSET),
      }
   }
end

goldenorb_main.ACTOR_ON_UPDATE
   :insert(
      offset_fire_point,
      {
         phase_build_state,
         inject_weapon_hud,
      },
      {
         phase_modify_state,
      },
      {
         hud = {
            fire_point = I_READ,
            fire_point2 = I_READ,
         }
      },
      {
         hud = {
            fire_point = O_WRITE,
            fire_point2 = O_WRITE,
         }
      }
   )
