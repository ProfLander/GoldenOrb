----------------------------------------------------------------------------
-- RoboDolg
----------------------------------------------------------------------------
-- 
-- Vector HUD for Anomaly
-- 
----------------------------------------------------------------------------
-- Implemented by Lhan
----------------------------------------------------------------------------

-- Imports

--- MCM Builder
local Tree = mcm_builder.Tree
local ImageWithText = mcm_builder.ImageWithText
local Checkbox = mcm_builder.Checkbox

--- RoboDolg Shapes
local reset = robodolg_shapes.reset

--- GoldenOrb Schedule
local I_READ = goldenorb_schedule.I_READ

--- GoldenOrb Main
local phase_apply_state = goldenorb_main.phase_apply_state
local phase_done = goldenorb_main.phase_done
local apply_camera = goldenorb_camera_mcm.apply_camera
local apply_weapon_hud = goldenorb_weapon.apply_weapon_hud

--- Logging
local log = robodolg_logging.log

-- State

tree = Tree.new("robodolg")

local page = tree:pages("core")

page:settings(
   ImageWithText.new("robodolg_title"):text("robodolg")
)
local enabled = page:settings(
   Checkbox.new("enabled"):default(true)
)

-- Implementation

--- Error handler
---@param e string
---@return nil
function handle_error(e)
   local msg = string.format("RoboDolg: ERROR: %s", e)
   printf(msg)
   actor_menu.set_msg(1, msg, 10000)
end

--- Use the cached state to draw robodolg modules
---@return nil
function draw_robodolg_impl(state)
   log("draw_robodolg_impl(%s)", state)

   reset()

   if not enabled:get() then
      log("  not enabled, returning")
      return
   end

   SendScriptCallback("robodolg_on_draw", state)
end

function draw_robodolg(state)
   log("draw_robodolg(%s)", state)
   local res, err = pcall(draw_robodolg_impl, state)
   if not res then
      ---@cast err string
      handle_error(err)
   end
end

--- Entrypoint
---@return nil
function on_game_start()
   log("robodolg.on_game_start")

   -- Declare our draw callback
   AddScriptCallback("robodolg_on_draw")

   -- Register with GoldenOrb's update callback
   goldenorb_main.ACTOR_ON_UPDATE:insert(
      draw_robodolg,
      {phase_done},
      {},
      I_READ
   )
end

--- Build the MCM tree on load
---@return nil
function on_mcm_load()
   return tree:build()
end
