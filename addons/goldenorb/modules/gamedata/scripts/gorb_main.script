----------------------------------------------------------------------------
-- GoldenOrb: Main Entrypoint
----------------------------------------------------------------------------
-- Decoupled aiming reticle for Anomaly.
----------------------------------------------------------------------------
-- Implemented by Lhan
----------------------------------------------------------------------------

-- Imports

--- Schedule
local System = cl_schedule.System
local actor_on_update = cl_schedule.actor_on_update
local actor_on_update_start = cl_schedule.actor_on_update_start
local actor_on_update_finish = cl_schedule.actor_on_update_finish
local on_level_call = cl_schedule.on_level_call
local on_level_call_start = cl_schedule.on_level_call_start
local on_level_call_finish = cl_schedule.on_level_call_finish

-- Constants

--- State build barriers
gorb_before_build_state = System.new("gorb_before_build_state")
gorb_after_build_state = System.new("gorb_after_build_state")

on_level_call:concat(
   on_level_call_start ..
   gorb_before_build_state ..
   gorb_after_build_state ..
   on_level_call_finish
)

--- State modify barriers
gorb_before_modify_state = System.new("gorb_before_modify_state")
gorb_after_modify_state = System.new("gorb_after_modify_state")

--- State apply barriers
gorb_before_apply_state = System.new("gorb_before_apply_state")
--[[
   :via(function()
      printf("before apply state")
   end)
--]]

gorb_after_apply_state = System.new("gorb_after_apply_state")
--[[
   :via(function()
      printf("after apply state")
   end)
--]]

actor_on_update:concat(
   actor_on_update_start ..
   gorb_before_modify_state ..
   gorb_after_modify_state ..
   gorb_before_apply_state ..
   gorb_after_apply_state ..
   actor_on_update_finish
)
